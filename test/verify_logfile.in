#!/bin/sh

#  Copyright (C) 2012, Axis Communications AB, LUND, SWEDEN
#
#  This file is part of RAPP.
#
#  RAPP is free software: you can redistribute it and/or modify
#  it under the terms of the GNU Lesser General Public License as published
#  by the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#  You can use the comments under either the terms of the GNU Lesser General
#  Public License version 3 as published by the Free Software Foundation,
#  either version 3 of the License or (at your option) any later version, or
#  the GNU Free Documentation License version 1.3 or any later version
#  published by the Free Software Foundation; with no Invariant Sections, no
#  Front-Cover Texts, and no Back-Cover Texts.
#  A copy of the license is included in the documentation section entitled
#  "GNU Free Documentation License".
#
#  RAPP is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#  GNU Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public
#  License and a copy of the GNU Free Documentation License along
#  with RAPP. If not, see <http://www.gnu.org/licenses/>.


#############################################################
# Script for verifying integrity of a logfile from a single run
# with RAPP configured with --enable-logging.
#############################################################

LOGFILE=@LOGFILE@
errors=0

err()
{
    echo "$0: $*" 1>&2
    exit 1
}

ncheck()
{
    n=`grep $1 ${LOGFILE} | wc -l`
    if ! eval test $n $2 $3; then
        echo "unexpected # of $1; not $2 $3" 1>&2
        errors=`expr $errors + 1`
    fi
}

test -e ${LOGFILE} || err "${LOGFILE} doesn't exist"

# With the "check" framework, there's one rapp_initialize per
# sub-test. Of course, still matching numbers, which we verify
# below.
if test @HAVE_CHECK_YESNO@ = no; then
    ncheck rapp_initialize -eq 1
    ncheck rapp_terminate -eq 1
fi

# All these are just supposed to be reasonable low limits,
# suitable for any limited test-suite run and any target.
# (Well, with only binary tests or only non-binary tests, there
# may not be any rapp_pixel_(set|get)_<other kind>, but anyway.)
ninit=`grep rapp_initialize ${LOGFILE} | wc -l`
ncheck rapp_initialize -ge 1
ncheck rapp_terminate -eq $ninit
ncheck rapp_malloc -ge 1
ncheck rapp_free -ge 1
ncheck rapp_align -ge 1
ncheck rapp_pixel_set_u8 -ge 16
ncheck rapp_pixel_get_u8 -ge 16
ncheck rapp_pixel_set_bin -ge 16
ncheck rapp_pixel_get_bin -ge 16

test $errors -eq 0 || err "$errors errors"

# Remove it, or we'll mismatch the -eq tests as multiple runs
# are accumulative.
rm ${LOGFILE} || err "can't remove ${LOGFILE}"

exit 0
